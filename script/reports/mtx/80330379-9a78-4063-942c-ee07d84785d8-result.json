{"name": "支付接口测试用例", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?", "trace": "self = <script.test_payorder.TestPayOrder object at 0x000001BAF8479B80>\n\n    @allure.story('支付接口的测试')\n    @allure.title('支付接口测试用例')\n    def test_payorder(self):\n        '''\n        对支付接口进行测试\n        :return:\n        '''\n        # 请求支付接口\n>       resp_pay = self.payorder_obj.pay_order(self.session)\n\ntest_payorder.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\api\\payOrderApi.py:18: in pay_order\n    resp = session.get(self.url,allow_redirects=False)\nD:\\Linde\\install\\python\\lib\\site-packages\\requests\\sessions.py:555: in get\n    return self.request('GET', url, **kwargs)\nD:\\Linde\\install\\python\\lib\\site-packages\\requests\\sessions.py:528: in request\n    prep = self.prepare_request(req)\nD:\\Linde\\install\\python\\lib\\site-packages\\requests\\sessions.py:456: in prepare_request\n    p.prepare(\nD:\\Linde\\install\\python\\lib\\site-packages\\requests\\models.py:316: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [GET]>, url = 'None', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL 'None': No schema supplied. Perhaps you meant http://None?\n\nD:\\Linde\\install\\python\\lib\\site-packages\\requests\\models.py:390: MissingSchema"}, "description": "\n        对支付接口进行测试\n        :return:\n        ", "attachments": [{"name": "log", "source": "f9659ee9-25e1-4fee-99b7-05c966cfdd1e-attachment.txt", "type": "text/plain"}], "start": 1634269307408, "stop": 1634269307409, "uuid": "8a23d930-79a6-4369-9dda-46cce6ff7ae2", "historyId": "c5ecf60e7b93e3c785af3a613ad67fef", "testCaseId": "30e09c0d831b7f682ff999606853d286", "fullName": "script.test_payorder.TestPayOrder#test_payorder", "labels": [{"name": "story", "value": "支付接口的测试"}, {"name": "parentSuite", "value": "script"}, {"name": "suite", "value": "test_payorder"}, {"name": "subSuite", "value": "TestPayOrder"}, {"name": "host", "value": "LAPTOP-95KM4O2I"}, {"name": "thread", "value": "33916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "script.test_payorder"}]}